openapi: "3.0.1"
info:
  title: "sample"
  version: "2021-03-27T01:10:54Z"
paths:
  /put-item:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "PUT"
        uri: "${integration_url}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n#if($inputRoot.toString().contains(\"\
                error\"))\n#set($context.responseOverride.status = 500)\n$context.error.message=\"\
                Internal Server Error\"\n#else\n$input.json(\"$\")\n#end"
        requestTemplates:
          application/json: "$input.json('$')"
        passthroughBehavior: "when_no_templates"
        contentHandling: "CONVERT_TO_TEXT"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
    Item:
      title: "Item"
      required:
      - "itemName"
      - "itemPrice"
      type: "object"
      properties:
        itemName:
          type: "string"
        itemPrice:
          type: "integer"
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
x-amazon-apigateway-request-validators:
  Validate body, query string parameters, and headers:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-minimum-compression-size: 0
